{"version":3,"sources":["components/Container/index.js","components/Header/index.js","components/Row/index.js","components/Col.js","components/Employee/index.js","utils/API.js","components/ColNames/index.js","components/SearchResults/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","Header","Row","fluid","Col","size","split","map","join","Employee","src","picture","thumbnail","alt","name","last","title","first","phone","email","dob","slice","axios","get","ColNames","onClick","sort","SearchResults","state","search","employees","filteredEmployees","order","handleInputChange","event","target","value","setState","filterResults","handleFormSubmit","preventDefault","searchEmployees","handleSort","category","console","log","sorted","a","b","this","API","then","res","modifiedUsers","data","results","fullname","age","date","catch","err","val","filter","employee","toLowerCase","includes","onChange","type","placeholder","key","id","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ac7f05df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\">{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>{props.children}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"} employeeRow`}>{props.children}</div>;\r\n}\r\n\r\nexport default Row;","import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return (\r\n    <div className={size}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Col;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Row from \"../Row\";\r\nimport Col from \"../Col.js\";\r\n\r\nfunction Employee(props) {\r\n  return (\r\n    <Row className=\"employee\">\r\n      <Col size=\"sm-1\" className=\"image\">\r\n        <img src={props.picture.thumbnail} alt={props.name.last}></img>\r\n      </Col>\r\n      <Col size=\"sm-3\" className=\"name\">\r\n        <p>{props.name.title} {props.name.first} {props.name.last}</p>\r\n      </Col>\r\n      <Col size=\"sm-3\" className=\"phone\">\r\n        <p>{props.phone}</p>\r\n      </Col>\r\n      <Col size=\"sm-3\" className=\"email\">\r\n        <p>{props.email}</p>\r\n      </Col>\r\n      <Col size=\"sm-2\" className=\"dob\">\r\n        <p>{props.dob.slice(5,7) + \"/\" + props.dob.slice(8,10) + \"/\" + props.dob.slice(0, 4)}</p>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Employee;","import axios from \"axios\";\r\nconst URL = \"https://randomuser.me/api/?results=200&nat=us\";\r\n\r\nexport default {\r\n  search: function() {\r\n    return axios.get(URL);\r\n  }\r\n};","import React from \"react\";\r\nimport Col from \"../Col\";\r\nimport \"./style.css\";\r\n\r\nfunction ColNames(props) {\r\n    return (\r\n        <div className=\"row colnames\">\r\n            <Col size=\"sm-1\" className=\"image\">\r\n                <strong><p>Image</p></strong>\r\n            </Col>\r\n            <Col size=\"sm-3\" className=\"name\">\r\n                <strong><p>Name <i onClick={() => props.sort(\"fullname\")} className=\"fas fa-sort\"></i></p></strong>\r\n            </Col>\r\n            <Col size=\"sm-3\" className=\"phone\">\r\n                <strong><p>Phone <i onClick={() => props.sort(\"phone\")} className=\"fas fa-sort\"></i></p></strong>\r\n            </Col>\r\n            <Col size=\"sm-3\" className=\"email\">\r\n                <strong><p>Email <i onClick={() => props.sort(\"email\")} className=\"fas fa-sort\"></i></p></strong>\r\n            </Col>\r\n            <Col size=\"sm-2\" className=\"dob\">\r\n                <strong><p>DOB <i onClick={() => props.sort(\"age\")} className=\"fas fa-sort\"></i></p></strong>\r\n            </Col>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColNames;","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Employee from \"../Employee\";\r\nimport API from \"../../utils/API.js\";\r\nimport ColNames from \"../ColNames\"\r\n\r\nclass SearchResults extends Component {\r\n    state = {\r\n        search: \"\",\r\n        employees: [],\r\n        filteredEmployees: [],\r\n        order: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchEmployees(\"\");\r\n    }\r\n\r\n    searchEmployees() {\r\n    API.search()\r\n        .then(res => {\r\n            const modifiedUsers = res.data.results.map(a=> {\r\n                return {\r\n                    ...a,\r\n                    fullname: a.name.first + \" \" + a.name.last,\r\n                    age: a.dob.age,\r\n                    dob:a.dob.date\r\n                }\r\n            })\r\n            this.setState({\r\n                employees: modifiedUsers,\r\n                filteredEmployees: modifiedUsers\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    filterResults(val) {\r\n        let filterResults = this.state.employees.filter(employee => employee.fullname.toLowerCase().includes(val.toLowerCase()));\r\n        this.setState({\r\n            filteredEmployees: filterResults\r\n        })\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        this.filterResults(value);\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchEmployees(this.state.search)\r\n    };\r\n\r\n    handleSort = category => {\r\n        console.log(this.state, category)\r\n        const sorted = this.state.filteredEmployees.sort((a,b)=> a[category]<b[category] ? -1*this.state.order : a[category]>b[category] ? 1*this.state.order : 0)\r\n        this.setState({\r\n            filteredEmployees: sorted,\r\n            order: -this.state.order\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"row\">\r\n                    <form className=\"form\">\r\n                        <input\r\n                            value={this.state.search}\r\n                            name=\"search\"\r\n                            onChange={this.handleInputChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-primary submitBtn\" onClick={this.handleFormSubmit}>Submit</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <ColNames sort={this.handleSort}/>\r\n                    {this.state.filteredEmployees.map(employee =>\r\n                        <Employee\r\n                        key = {employee.id.value}\r\n                        picture = {employee.picture}\r\n                        name = {employee.name}\r\n                        phone = {employee.phone}\r\n                        email = {employee.email}\r\n                        dob = {employee.dob}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default SearchResults;","import React from \"react\";\nimport './App.css';\nimport Container from \"./components/Container\"\nimport Header from \"./components/Header\";\nimport SearchResults from \"./components/SearchResults\";\n\nfunction App() {\n  return (\n    <div>\n      < Header>Employee Directory</ Header>\n      <Container>\n        < SearchResults />\n      </Container>\n    </div>\n  ); \n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}